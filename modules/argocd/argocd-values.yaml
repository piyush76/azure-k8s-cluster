# ArgoCD values content
global:
  image:
    repository: quay.io/argoproj/argocd
    imagePullPolicy: IfNotPresent

server:
  extraArgs:
    - ${insecure ? "--insecure" : ""}
  service:
    type: ${service_type}
  ingress:
    enabled: false
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  resources:
    limits:
      cpu: ${server_resources.limits.cpu}
      memory: ${server_resources.limits.memory}
    requests:
      cpu: ${server_resources.requests.cpu}
      memory: ${server_resources.requests.memory}

controller:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  resources:
    limits:
      cpu: ${controller_resources.limits.cpu}
      memory: ${controller_resources.limits.memory}
    requests:
      cpu: ${controller_resources.requests.cpu}
      memory: ${controller_resources.requests.memory}

repo-server:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  resources:
    limits:
      cpu: ${repo_server_resources.limits.cpu}
      memory: ${repo_server_resources.limits.memory}
    requests:
      cpu: ${repo_server_resources.requests.cpu}
      memory: ${repo_server_resources.requests.memory}

redis:
  enabled: ${enable_ha}

configs:
  cm:
    url: ${argocd_url}
  %{ if azure_client_id != "" ~}
dex.config: |
  connectors:
  - type: microsoft
    id: microsoft
    name: Microsoft
    config:
      clientID: ${azure_client_id}
      clientSecret: ${azure_client_secret}
      tenant: ${azure_tenant_id}
      redirectURI: ${argocd_url}/api/dex/callback
  %{ endif ~}
